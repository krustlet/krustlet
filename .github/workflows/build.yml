name: Build and Test
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.config.os }}
    env: ${{ matrix.config.env }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
              os: "ubuntu-latest",
              arch: "amd64",
              args: "",
              url: "https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-unknown-linux-musl.tar.gz",
              name: "just",
              pathInArchive: "just",
              env: {},
            }
          - {
              os: "ubuntu-latest",
              arch: "amd64",
              args: "--features wasmedge",
              url: "https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-unknown-linux-musl.tar.gz",
              name: "just",
              pathInArchive: "just",
              env: {},
            }
          - {
              os: "ubuntu-latest",
              arch: "aarch64",
              args: "--target aarch64-unknown-linux-gnu",
              url: "https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-unknown-linux-musl.tar.gz",
              name: "just",
              pathInArchive: "just",
              env: { OPENSSL_DIR: "/usr/local/openssl-aarch64" },
            }
          - {
              os: "macos-latest",
              arch: "amd64",
              args: "",
              url: "https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-apple-darwin.tar.gz",
              name: "just",
              pathInArchive: "just",
              env: {},
            }
    steps:
      - uses: actions/checkout@v2
      - uses: engineerd/configurator@v0.0.7
        with:
          name: ${{ matrix.config.name }}
          url: ${{ matrix.config.url }}
          pathInArchive: ${{ matrix.config.pathInArchive }}
      # hack(bacongobbler): install rustfmt to work around darwin toolchain issues
      - name: "(macOS) install dev tools"
        if: runner.os == 'macOS'
        run: |
          rustup component add rustfmt --toolchain stable-x86_64-apple-darwin
          rustup component add clippy --toolchain stable-x86_64-apple-darwin
          rustup update stable
      - name: setup for cross-compile builds
        if: matrix.config.arch == 'aarch64'
        run: |
          sudo apt update
          sudo apt install gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          cd /tmp
          git clone https://github.com/openssl/openssl
          cd openssl
          git checkout OpenSSL_1_1_1h
          sudo mkdir -p $OPENSSL_DIR
          ./Configure linux-aarch64 --prefix=$OPENSSL_DIR --openssldir=$OPENSSL_DIR shared
          make CC=aarch64-linux-gnu-gcc
          sudo make install
          rustup target add aarch64-unknown-linux-gnu
      - name: Build
        run: |
          just build ${{ matrix.config.args }}
          just test
  windows-build:
    runs-on: windows-latest
    defaults:
      run:
        # For some reason, running with the default powershell doesn't work with the `Build` step,
        # but bash does!
        shell: bash
    steps:
      - uses: actions/checkout@v2
      - uses: engineerd/configurator@v0.0.5
        with:
          name: just
          url: "https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-pc-windows-msvc.zip"
          pathInArchive: just.exe
      - name: Build
        run: |
          just --justfile justfile-windows build
          just --justfile justfile-windows test
  windows-e2e:
    env:
      # Because we are on a shared build machine, we need to use a different directory than the default homedir
      KRUSTLET_DATA_DIR: ".krustlet"
      CONFIG_DIR: '.krustlet\config'
    runs-on: [self-hosted, windows, x64]
    steps:
      - uses: actions/checkout@v2
      - uses: engineerd/configurator@v0.0.7
        with:
          name: just.exe
          url: "https://github.com/casey/just/releases/download/v0.9.4/just-v0.9.4-x86_64-pc-windows-msvc.zip"
          pathInArchive: just.exe
      - uses: engineerd/configurator@v0.0.7
        with:
          name: kind.exe
          url: "https://kind.sigs.k8s.io/dl/v0.11.1/kind-windows-amd64"
      - name: Ensure Docker is running
        run: .\tests\windows\ensure-docker.ps1
      - name: Setup kind cluster
        run: kind create cluster --config .\tests\windows\kind-config.yaml --name kind-${{ github.run_id }}
      # Because Windows uses rustls, it can't use a bare IP address. This
      # switches the kubeconfig file to use localhost instead
      - name: Modify kubeconfig
        run: |
          kubectl config view -o jsonpath='{.clusters[?(@.name == \"kind-kind-${{ github.run_id }}\")].cluster.server}' | % {$_.replace("127.0.0.1", "localhost")} | % {kubectl config set clusters.kind-kind-${{ github.run_id }}.server $_}
      - name: Get NODE_IP
        run: |
          $addr = (Get-NetIPAddress -AddressFamily IPV4 -InterfaceAlias 'vEthernet (WSL)').IPAddress
          echo "KRUSTLET_NODE_IP=$addr" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      - name: Run e2e tests (full)
        if: ${{ github.event_name == 'push' }}
        env:
          KRUSTLET_TEST_ENV: "ci"
          KRUSTLET_E2E_IMAGE_PULL_SECRET: ${{ secrets.KRUSTLET_E2E_IMAGE_PULL_SECRET }}
          KRUSTLET_NODE_IP: ${{ env.KRUSTLET_NODE_IP }}
        run: just --justfile justfile-windows test-e2e-standalone
      - name: Run e2e tests (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: just --justfile justfile-windows test-e2e-standalone
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-logs-windows
          path: oneclick-logs/
      - name: Cleanup kind cluster
        if: ${{ always() }}
        run: kind delete cluster --name kind-${{ github.run_id }}
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: engineerd/setup-kind@v0.5.0
        with:
          version: "v0.11.1"
      - uses: engineerd/configurator@v0.0.7
        with:
          name: just
          url: https://github.com/casey/just/releases/download/v0.5.11/just-v0.5.11-x86_64-unknown-linux-musl.tar.gz
          pathInArchive: just
      - name: Get NODE_IP
        run: echo "KRUSTLET_NODE_IP=$(ip addr ls eth0 | awk '/inet / {split($2, ary, /\//); print ary[1]}')" >> $GITHUB_ENV
      - name: Apply RBAC rules for CSI tests
        run: kubectl apply -f tests/csi/rbac.yaml
      - name: Run e2e tests (full)
        if: ${{ github.event_name == 'push' }}
        env:
          KRUSTLET_TEST_ENV: "ci"
          KRUSTLET_E2E_IMAGE_PULL_SECRET: ${{ secrets.KRUSTLET_E2E_IMAGE_PULL_SECRET }}
          KRUSTLET_NODE_IP: ${{ env.KRUSTLET_NODE_IP }}
        run: just test-e2e-standalone
      - name: Run e2e tests (PR)
        if: ${{ github.event_name == 'pull_request' }}
        run: just test-e2e-standalone
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: e2e-logs
          path: oneclick-logs/

  cargo-deny:
    name: Run cargo deny
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    steps:
      - uses: actions/checkout@v2
      - uses: EmbarkStudios/cargo-deny-action@v1
        with:
          command: check ${{ matrix.checks }}
